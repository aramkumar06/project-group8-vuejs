# Generated by Django 2.2.9 on 2020-01-29 07:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ColumnsPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('table_name', models.CharField(db_column='Table_name', max_length=64)),
                ('column_name', models.CharField(db_column='Column_name', max_length=64)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('column_priv', models.CharField(db_column='Column_priv', max_length=31)),
            ],
            options={
                'db_table': 'columns_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ColumnStats',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=64)),
                ('column_name', models.CharField(max_length=64)),
                ('min_value', models.CharField(blank=True, max_length=255, null=True)),
                ('max_value', models.CharField(blank=True, max_length=255, null=True)),
                ('nulls_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('avg_length', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('avg_frequency', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hist_size', models.PositiveIntegerField(blank=True, null=True)),
                ('hist_type', models.CharField(blank=True, max_length=14, null=True)),
                ('histogram', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'column_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Db',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('select_priv', models.CharField(db_column='Select_priv', max_length=1)),
                ('insert_priv', models.CharField(db_column='Insert_priv', max_length=1)),
                ('update_priv', models.CharField(db_column='Update_priv', max_length=1)),
                ('delete_priv', models.CharField(db_column='Delete_priv', max_length=1)),
                ('create_priv', models.CharField(db_column='Create_priv', max_length=1)),
                ('drop_priv', models.CharField(db_column='Drop_priv', max_length=1)),
                ('grant_priv', models.CharField(db_column='Grant_priv', max_length=1)),
                ('references_priv', models.CharField(db_column='References_priv', max_length=1)),
                ('index_priv', models.CharField(db_column='Index_priv', max_length=1)),
                ('alter_priv', models.CharField(db_column='Alter_priv', max_length=1)),
                ('create_tmp_table_priv', models.CharField(db_column='Create_tmp_table_priv', max_length=1)),
                ('lock_tables_priv', models.CharField(db_column='Lock_tables_priv', max_length=1)),
                ('create_view_priv', models.CharField(db_column='Create_view_priv', max_length=1)),
                ('show_view_priv', models.CharField(db_column='Show_view_priv', max_length=1)),
                ('create_routine_priv', models.CharField(db_column='Create_routine_priv', max_length=1)),
                ('alter_routine_priv', models.CharField(db_column='Alter_routine_priv', max_length=1)),
                ('execute_priv', models.CharField(db_column='Execute_priv', max_length=1)),
                ('event_priv', models.CharField(db_column='Event_priv', max_length=1)),
                ('trigger_priv', models.CharField(db_column='Trigger_priv', max_length=1)),
                ('delete_history_priv', models.CharField(db_column='Delete_history_priv', max_length=1)),
            ],
            options={
                'db_table': 'db',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('db', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('body', models.TextField()),
                ('definer', models.CharField(max_length=141)),
                ('execute_at', models.DateTimeField(blank=True, null=True)),
                ('interval_value', models.IntegerField(blank=True, null=True)),
                ('interval_field', models.CharField(blank=True, max_length=18, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('starts', models.DateTimeField(blank=True, null=True)),
                ('ends', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=18)),
                ('on_completion', models.CharField(max_length=8)),
                ('sql_mode', models.CharField(max_length=561)),
                ('comment', models.CharField(max_length=64)),
                ('originator', models.PositiveIntegerField()),
                ('time_zone', models.CharField(max_length=64)),
                ('character_set_client', models.CharField(blank=True, max_length=32, null=True)),
                ('collation_connection', models.CharField(blank=True, max_length=32, null=True)),
                ('db_collation', models.CharField(blank=True, max_length=32, null=True)),
                ('body_utf8', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Func',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('ret', models.IntegerField()),
                ('dl', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=9)),
            ],
            options={
                'db_table': 'func',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_time', models.DateTimeField()),
                ('user_host', models.TextField()),
                ('thread_id', models.BigIntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('command_type', models.CharField(max_length=64)),
                ('argument', models.TextField()),
            ],
            options={
                'db_table': 'general_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('priv', models.TextField(db_column='Priv')),
            ],
            options={
                'db_table': 'global_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GtidSlavePos',
            fields=[
                ('domain_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('sub_id', models.BigIntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('seq_no', models.BigIntegerField()),
            ],
            options={
                'db_table': 'gtid_slave_pos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpCategory',
            fields=[
                ('help_category_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('parent_category_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'help_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpKeyword',
            fields=[
                ('help_keyword_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'help_keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpRelation',
            fields=[
                ('help_topic_id', models.PositiveIntegerField()),
                ('help_keyword_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'help_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpTopic',
            fields=[
                ('help_topic_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('help_category_id', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('example', models.TextField()),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'help_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndexStats',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=64)),
                ('index_name', models.CharField(max_length=64)),
                ('prefix_arity', models.PositiveIntegerField()),
                ('avg_frequency', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'index_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnodbIndexStats',
            fields=[
                ('database_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=199)),
                ('index_name', models.CharField(max_length=64)),
                ('last_update', models.DateTimeField()),
                ('stat_name', models.CharField(max_length=64)),
                ('stat_value', models.BigIntegerField()),
                ('sample_size', models.BigIntegerField(blank=True, null=True)),
                ('stat_description', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'innodb_index_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnodbTableStats',
            fields=[
                ('database_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=199)),
                ('last_update', models.DateTimeField()),
                ('n_rows', models.BigIntegerField()),
                ('clustered_index_size', models.BigIntegerField()),
                ('sum_of_other_index_sizes', models.BigIntegerField()),
            ],
            options={
                'db_table': 'innodb_table_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('dl', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'plugin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proc',
            fields=[
                ('db', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('type', models.CharField(max_length=12)),
                ('specific_name', models.CharField(max_length=64)),
                ('language', models.CharField(max_length=3)),
                ('sql_data_access', models.CharField(max_length=17)),
                ('is_deterministic', models.CharField(max_length=3)),
                ('security_type', models.CharField(max_length=7)),
                ('param_list', models.TextField()),
                ('returns', models.TextField()),
                ('body', models.TextField()),
                ('definer', models.CharField(max_length=141)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('sql_mode', models.CharField(max_length=561)),
                ('comment', models.TextField()),
                ('character_set_client', models.CharField(blank=True, max_length=32, null=True)),
                ('collation_connection', models.CharField(blank=True, max_length=32, null=True)),
                ('db_collation', models.CharField(blank=True, max_length=32, null=True)),
                ('body_utf8', models.TextField(blank=True, null=True)),
                ('aggregate', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'proc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcsPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('routine_name', models.CharField(db_column='Routine_name', max_length=64)),
                ('routine_type', models.CharField(db_column='Routine_type', max_length=12)),
                ('grantor', models.CharField(db_column='Grantor', max_length=141)),
                ('proc_priv', models.CharField(db_column='Proc_priv', max_length=27)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'procs_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProxiesPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('proxied_host', models.CharField(db_column='Proxied_host', max_length=60)),
                ('proxied_user', models.CharField(db_column='Proxied_user', max_length=80)),
                ('with_grant', models.IntegerField(db_column='With_grant')),
                ('grantor', models.CharField(db_column='Grantor', max_length=141)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'proxies_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolesMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(db_column='Host', max_length=60)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('role', models.CharField(db_column='Role', max_length=80)),
                ('admin_option', models.CharField(db_column='Admin_option', max_length=1)),
            ],
            options={
                'db_table': 'roles_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('server_name', models.CharField(db_column='Server_name', max_length=64, primary_key=True, serialize=False)),
                ('host', models.CharField(db_column='Host', max_length=2048)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('username', models.CharField(db_column='Username', max_length=80)),
                ('password', models.CharField(db_column='Password', max_length=64)),
                ('port', models.IntegerField(db_column='Port')),
                ('socket', models.CharField(db_column='Socket', max_length=64)),
                ('wrapper', models.CharField(db_column='Wrapper', max_length=64)),
                ('owner', models.CharField(db_column='Owner', max_length=512)),
            ],
            options={
                'db_table': 'servers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlowLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('user_host', models.TextField()),
                ('query_time', models.TimeField()),
                ('lock_time', models.TimeField()),
                ('rows_sent', models.IntegerField()),
                ('rows_examined', models.IntegerField()),
                ('db', models.CharField(max_length=512)),
                ('last_insert_id', models.IntegerField()),
                ('insert_id', models.IntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('sql_text', models.TextField()),
                ('thread_id', models.BigIntegerField()),
                ('rows_affected', models.IntegerField()),
            ],
            options={
                'db_table': 'slow_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablesPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=80)),
                ('table_name', models.CharField(db_column='Table_name', max_length=64)),
                ('grantor', models.CharField(db_column='Grantor', max_length=141)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('table_priv', models.CharField(db_column='Table_priv', max_length=121)),
                ('column_priv', models.CharField(db_column='Column_priv', max_length=31)),
            ],
            options={
                'db_table': 'tables_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TableStats',
            fields=[
                ('db_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=64)),
                ('cardinality', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'table_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('time_zone_id', models.AutoField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('use_leap_seconds', models.CharField(db_column='Use_leap_seconds', max_length=1)),
            ],
            options={
                'db_table': 'time_zone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneLeapSecond',
            fields=[
                ('transition_time', models.BigIntegerField(db_column='Transition_time', primary_key=True, serialize=False)),
                ('correction', models.IntegerField(db_column='Correction')),
            ],
            options={
                'db_table': 'time_zone_leap_second',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneName',
            fields=[
                ('name', models.CharField(db_column='Name', max_length=64, primary_key=True, serialize=False)),
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id')),
            ],
            options={
                'db_table': 'time_zone_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneTransition',
            fields=[
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('transition_time', models.BigIntegerField(db_column='Transition_time')),
                ('transition_type_id', models.PositiveIntegerField(db_column='Transition_type_id')),
            ],
            options={
                'db_table': 'time_zone_transition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneTransitionType',
            fields=[
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('transition_type_id', models.PositiveIntegerField(db_column='Transition_type_id')),
                ('offset', models.IntegerField(db_column='Offset')),
                ('is_dst', models.PositiveIntegerField(db_column='Is_DST')),
                ('abbreviation', models.CharField(db_column='Abbreviation', max_length=8)),
            ],
            options={
                'db_table': 'time_zone_transition_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionRegistry',
            fields=[
                ('transaction_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('commit_id', models.BigIntegerField(unique=True)),
                ('begin_timestamp', models.DateTimeField()),
                ('commit_timestamp', models.DateTimeField()),
                ('isolation_level', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'transaction_registry',
                'managed': False,
            },
        ),
    ]
